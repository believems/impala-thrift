// Code generated by Thrift Compiler (0.17.0). DO NOT EDIT.

package metricdefs

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	thrift "github.com/apache/thrift/lib/go/thrift"
	"github.com/believems/impala-thrift/metrics"
	"time"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = errors.New
var _ = context.Background
var _ = time.Now
var _ = bytes.Equal

var _ = metrics.GoUnusedProtection__
var TMetricDefs map[string]*TMetricDef

func init() {
	TMetricDefs = map[string]*TMetricDef{
		"admission-controller.agg-mem-reserved.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Resource Pool $0 Aggregate Mem Reserved"),

			Key: thrift.StringPtr("admission-controller.agg-mem-reserved.$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Resource Pool $0 Aggregate Mem Reserved"),

			Units: metrics.TUnitPtr(7),
		},
		"admission-controller.agg-num-queued.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Resource Pool $0 Aggregate Queue Size"),

			Key: thrift.StringPtr("admission-controller.agg-num-queued.$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Resource Pool $0 Aggregate Queue Size"),

			Units: metrics.TUnitPtr(7),
		},
		"admission-controller.agg-num-running.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Resource Pool $0 Aggregate Num Running"),

			Key: thrift.StringPtr("admission-controller.agg-num-running.$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Resource Pool $0 Aggregate Num Running"),

			Units: metrics.TUnitPtr(7),
		},
		"admission-controller.executor-group.num-queries-executing.$0": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of queries admitted on this coordinator running on executor group: $0"),

			Key: thrift.StringPtr("admission-controller.executor-group.num-queries-executing.$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Total number of queries admitted on this coordinator running on executor group: $0"),

			Units: metrics.TUnitPtr(0),
		},
		"admission-controller.local-backend-mem-reserved.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Resource Pool $0 Mem Reserved by the backend coordinator"),

			Key: thrift.StringPtr("admission-controller.local-backend-mem-reserved.$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Resource Pool $0 Coordinator Backend Mem Reserved"),

			Units: metrics.TUnitPtr(7),
		},
		"admission-controller.local-backend-mem-usage.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Resource Pool $0 Coordinator Backend Mem Usage"),

			Key: thrift.StringPtr("admission-controller.local-backend-mem-usage.$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Resource Pool $0 Coordinator Backend Mem Usage"),

			Units: metrics.TUnitPtr(7),
		},
		"admission-controller.local-mem-admitted.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Resource Pool $0 Local Mem Admitted"),

			Key: thrift.StringPtr("admission-controller.local-mem-admitted.$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Resource Pool $0 Local Mem Admitted"),

			Units: metrics.TUnitPtr(7),
		},
		"admission-controller.local-num-admitted-running.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Resource Pool $0 Coordinator Backend Num Running"),

			Key: thrift.StringPtr("admission-controller.local-num-admitted-running.$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Resource Pool $0 Coordinator Backend Num Running"),

			Units: metrics.TUnitPtr(7),
		},
		"admission-controller.local-num-queued.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Resource Pool $0 Queue Size on the coordinator"),

			Key: thrift.StringPtr("admission-controller.local-num-queued.$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Resource Pool $0 Coordinator Backend Queue Size"),

			Units: metrics.TUnitPtr(7),
		},
		"admission-controller.pool-clamp-mem-limit-query-option.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("If false, the mem_limit query option will not be bounded by the max/min query mem limits specified for the pool"),

			Key: thrift.StringPtr("admission-controller.pool-clamp-mem-limit-query-option.$0"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Resource Pool $0 Clamp 'MEM_LIMIT' Query Option Flag"),

			Units: metrics.TUnitPtr(7),
		},
		"admission-controller.pool-max-mem-resources.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Resource Pool $0 Configured Max Mem Resources"),

			Key: thrift.StringPtr("admission-controller.pool-max-mem-resources.$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Resource Pool $0 Configured Max Mem Resources"),

			Units: metrics.TUnitPtr(7),
		},
		"admission-controller.pool-max-query-mem-limit.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Resource Pool $0 Max Query Memory Limit"),

			Key: thrift.StringPtr("admission-controller.pool-max-query-mem-limit.$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Resource Pool $0 Max Query Memory Limit"),

			Units: metrics.TUnitPtr(3),
		},
		"admission-controller.pool-max-queued.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Resource Pool $0 Configured Max Queued"),

			Key: thrift.StringPtr("admission-controller.pool-max-queued.$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Resource Pool $0 Configured Max Queued"),

			Units: metrics.TUnitPtr(7),
		},
		"admission-controller.pool-max-requests.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Resource Pool $0 Configured Max Requests"),

			Key: thrift.StringPtr("admission-controller.pool-max-requests.$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Resource Pool $0 Configured Max Requests"),

			Units: metrics.TUnitPtr(7),
		},
		"admission-controller.pool-min-query-mem-limit.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Resource Pool $0 Min Query Memory Limit"),

			Key: thrift.StringPtr("admission-controller.pool-min-query-mem-limit.$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Resource Pool $0 Min Query Memory Limit"),

			Units: metrics.TUnitPtr(3),
		},
		"admission-controller.pool-queue-timeout.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Resource Pool $0 Queue Timeout"),

			Key: thrift.StringPtr("admission-controller.pool-queue-timeout.$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Resource Pool $0 Queue Timeout"),

			Units: metrics.TUnitPtr(8),
		},
		"admission-controller.time-in-queue-ms.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Resource Pool $0 Time in Queue"),

			Key: thrift.StringPtr("admission-controller.time-in-queue-ms.$0"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Resource Pool $0 Time in Queue"),

			Units: metrics.TUnitPtr(8),
		},
		"admission-controller.total-admitted.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Total number of requests admitted to pool $0"),

			Key: thrift.StringPtr("admission-controller.total-admitted.$0"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Resource Pool $0 Total Admitted"),

			Units: metrics.TUnitPtr(0),
		},
		"admission-controller.total-dequeue-failed-coordinator-limited": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of times queries cannot be dequeued because of a resource limit on the coordinator."),

			Key: thrift.StringPtr("admission-controller.total-dequeue-failed-coordinator-limited"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Query dequeue failed because of a coordinator resource limit"),

			Units: metrics.TUnitPtr(7),
		},
		"admission-controller.total-dequeued.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Total number of requests dequeued in pool $0"),

			Key: thrift.StringPtr("admission-controller.total-dequeued.$0"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Resource Pool $0 Total Dequeued"),

			Units: metrics.TUnitPtr(0),
		},
		"admission-controller.total-queued.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Total number of requests queued in pool $0"),

			Key: thrift.StringPtr("admission-controller.total-queued.$0"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Resource Pool $0 Total Queued"),

			Units: metrics.TUnitPtr(0),
		},
		"admission-controller.total-rejected.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Total number of requests rejected in pool $0"),

			Key: thrift.StringPtr("admission-controller.total-rejected.$0"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Resource Pool $0 Total Rejected"),

			Units: metrics.TUnitPtr(0),
		},
		"admission-controller.total-released.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Total number of requests that have completed and released resources in pool $0"),

			Key: thrift.StringPtr("admission-controller.total-released.$0"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Resource Pool $0 Total Released"),

			Units: metrics.TUnitPtr(0),
		},
		"admission-controller.total-timed-out.$0": &TMetricDef{
			Contexts: []string{
				"RESOURCE_POOL"},

			Description: thrift.StringPtr("Total number of requests timed out waiting while queued in pool $0"),

			Key: thrift.StringPtr("admission-controller.total-timed-out.$0"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Resource Pool $0 Total Timed Out"),

			Units: metrics.TUnitPtr(0),
		},
		"admissiond.version": &TMetricDef{
			Contexts: []string{
				"ADMISSIOND"},

			Description: thrift.StringPtr("The full version string of the Admission Control Server."),

			Key: thrift.StringPtr("admissiond.version"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Admission Control Service Version"),

			Units: metrics.TUnitPtr(7),
		},
		"buffer-pool.$0.allocated-buffer-sizes": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Statistics for buffer sizes allocated from the system. Only a subset of allocations are counted in this metric to reduce overhead."),

			Key: thrift.StringPtr("buffer-pool.$0.allocated-buffer-sizes"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Buffer Pool Allocated Buffer Sizes."),

			Units: metrics.TUnitPtr(3),
		},
		"buffer-pool.$0.clean-page-hits": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of times a clean page was evicted to fulfil an allocation."),

			Key: thrift.StringPtr("buffer-pool.$0.clean-page-hits"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Buffer Pool Clean Page Hits."),

			Units: metrics.TUnitPtr(0),
		},
		"buffer-pool.$0.direct-alloc-count": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of times a new buffer was directly allocated from the system allocator to fulfil an allocation."),

			Key: thrift.StringPtr("buffer-pool.$0.direct-alloc-count"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Buffer Pool Direct Allocation Count."),

			Units: metrics.TUnitPtr(0),
		},
		"buffer-pool.$0.local-arena-free-buffer-hits": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of times a free buffer was recycled from this core's arena to fulfil an allocation."),

			Key: thrift.StringPtr("buffer-pool.$0.local-arena-free-buffer-hits"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Buffer Pool Local Arena Free Buffer Hit Count."),

			Units: metrics.TUnitPtr(0),
		},
		"buffer-pool.$0.num-final-scavenges": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of times the allocator had to lock all arenas and scavenge to fulfil an allocation."),

			Key: thrift.StringPtr("buffer-pool.$0.num-final-scavenges"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Buffer Pool Final Scavenge Count."),

			Units: metrics.TUnitPtr(0),
		},
		"buffer-pool.$0.num-scavenges": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of times the allocator had to scavenge to fulfil an allocation."),

			Key: thrift.StringPtr("buffer-pool.$0.num-scavenges"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Buffer Pool Scavenge Count."),

			Units: metrics.TUnitPtr(0),
		},
		"buffer-pool.$0.numa-arena-free-buffer-hits": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of times that a recycled buffer within the same NUMA node was used to fulfil an allocation."),

			Key: thrift.StringPtr("buffer-pool.$0.numa-arena-free-buffer-hits"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Buffer Pool Numa Free Buffer Hits."),

			Units: metrics.TUnitPtr(0),
		},
		"buffer-pool.$0.system-alloc-time": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total time the buffer pool spent in the system allocator for this arena."),

			Key: thrift.StringPtr("buffer-pool.$0.system-alloc-time"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Buffer Pool System Allocation Time."),

			Units: metrics.TUnitPtr(5),
		},
		"buffer-pool.clean-page-bytes": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total bytes of clean page memory cached in the buffer pool."),

			Key: thrift.StringPtr("buffer-pool.clean-page-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Buffer Pool Clean Page Bytes."),

			Units: metrics.TUnitPtr(3),
		},
		"buffer-pool.clean-pages": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of clean pages cached in the buffer pool."),

			Key: thrift.StringPtr("buffer-pool.clean-pages"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Buffer Pool Clean Pages."),

			Units: metrics.TUnitPtr(7),
		},
		"buffer-pool.clean-pages-limit": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Limit on number of clean pages cached in the buffer pool."),

			Key: thrift.StringPtr("buffer-pool.clean-pages-limit"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Buffer Pool Clean Pages Limit."),

			Units: metrics.TUnitPtr(3),
		},
		"buffer-pool.free-buffer-bytes": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total bytes of free buffer memory cached in the buffer pool."),

			Key: thrift.StringPtr("buffer-pool.free-buffer-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Buffer Pool Free Buffer Bytes."),

			Units: metrics.TUnitPtr(3),
		},
		"buffer-pool.free-buffers": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of free buffers cached in the buffer pool."),

			Key: thrift.StringPtr("buffer-pool.free-buffers"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Buffer Pool Free Buffers."),

			Units: metrics.TUnitPtr(7),
		},
		"buffer-pool.limit": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Maximum allowed bytes allocated by the buffer pool."),

			Key: thrift.StringPtr("buffer-pool.limit"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Buffer Pool Allocated Memory Limit."),

			Units: metrics.TUnitPtr(3),
		},
		"buffer-pool.reserved": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total bytes of buffers reserved by Impala subsystems"),

			Key: thrift.StringPtr("buffer-pool.reserved"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Buffer Pool Total Reserved Memory."),

			Units: metrics.TUnitPtr(3),
		},
		"buffer-pool.system-allocated": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total buffer memory currently allocated by the buffer pool."),

			Key: thrift.StringPtr("buffer-pool.system-allocated"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Buffer Pool Total Allocated Memory."),

			Units: metrics.TUnitPtr(3),
		},
		"buffer-pool.unused-reservation-bytes": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total bytes of buffer reservations by Impala subsystems that are currently unused"),

			Key: thrift.StringPtr("buffer-pool.unused-reservation-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Buffer Pool Unused Reservation Bytes."),

			Units: metrics.TUnitPtr(3),
		},
		"catalog-server.topic-processing-time-s": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Catalog Server Topic Processing Time"),

			Key: thrift.StringPtr("catalog-server.topic-processing-time-s"),

			Kind: metrics.TMetricKindPtr(3),

			Label: thrift.StringPtr("Catalog Server Topic Processing Time"),

			Units: metrics.TUnitPtr(9),
		},
		"catalog.cache.average-load-time": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Average time spent loading new values into the Impalad Catalog Cache."),

			Key: thrift.StringPtr("catalog.cache.average-load-time"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Average Impalad catalog cache load time"),

			Units: metrics.TUnitPtr(5),
		},
		"catalog.cache.eviction-count": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of evictions from the Impalad Catalog Cache."),

			Key: thrift.StringPtr("catalog.cache.eviction-count"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impalad catalog cache eviction count"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.cache.hit-count": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of Impalad Catalog cache hits."),

			Key: thrift.StringPtr("catalog.cache.hit-count"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impalad catalog cache hit count"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.cache.hit-rate": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Ratio of Impalad Catalog cache requests that were hits."),

			Key: thrift.StringPtr("catalog.cache.hit-rate"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Impalad catalog cache hit rate"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.cache.load-count": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total requests to Impalad Catalog cache requests that loaded new values."),

			Key: thrift.StringPtr("catalog.cache.load-count"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impalad catalog cache load count"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.cache.load-exception-count": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total requests to Impalad Catalog cache requests that threw exceptions loading new values."),

			Key: thrift.StringPtr("catalog.cache.load-exception-count"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impalad catalog cache load exception count"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.cache.load-exception-rate": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Ratio of Impalad Catalog cache requests that threw exceptions loading new values."),

			Key: thrift.StringPtr("catalog.cache.load-exception-rate"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Impalad catalog cache load exception rate"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.cache.load-success-count": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of Impalad Catalog cache requests that successfully loaded new values."),

			Key: thrift.StringPtr("catalog.cache.load-success-count"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impalad catalog cache load success count"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.cache.miss-count": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of Impalad Catalog cache requests that returned uncached values."),

			Key: thrift.StringPtr("catalog.cache.miss-count"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impalad catalog cache load miss count"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.cache.miss-rate": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Ratio of Impalad Catalog cache requests that were misses."),

			Key: thrift.StringPtr("catalog.cache.miss-rate"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Impalad catalog cache load miss rate"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.cache.request-count": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of Impalad Catalog cache requests."),

			Key: thrift.StringPtr("catalog.cache.request-count"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impalad catalog cache request count"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.cache.total-load-time": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total time spent in Impalad Catalog cache loading new values."),

			Key: thrift.StringPtr("catalog.cache.total-load-time"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impalad catalog cache time spent in loads"),

			Units: metrics.TUnitPtr(5),
		},
		"catalog.catalog-object-version-lower-bound": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Lower bound of catalog object version in local catalog cache."),

			Key: thrift.StringPtr("catalog.catalog-object-version-lower-bound"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Catalog object version lower bound"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.curr-serviceid": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Catalog service id."),

			Key: thrift.StringPtr("catalog.curr-serviceid"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Catalog service id"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.curr-topic": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Statestore topic update version."),

			Key: thrift.StringPtr("catalog.curr-topic"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Statestore topic update version"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.curr-version": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Catalog topic update version."),

			Key: thrift.StringPtr("catalog.curr-version"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Catalog topic update version"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.num-databases": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of databases in the catalog."),

			Key: thrift.StringPtr("catalog.num-databases"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Databases"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.num-tables": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of tables in the catalog."),

			Key: thrift.StringPtr("catalog.num-tables"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Tables"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.partial-fetch-rpc.queue-len": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("RPC queue length for partial object fetches."),

			Key: thrift.StringPtr("catalog.partial-fetch-rpc.queue-len"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("RPC queue length for partial object fetch requests."),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.ready": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Indicates if the catalog is ready."),

			Key: thrift.StringPtr("catalog.ready"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Catalog Ready"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.server.client-cache.clients-in-use": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of clients currently in use by the Catalog Server client cache."),

			Key: thrift.StringPtr("catalog.server.client-cache.clients-in-use"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Catalog Server Client Cache Clients In Use"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.server.client-cache.total-clients": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of clients in the Catalog Server client cache."),

			Key: thrift.StringPtr("catalog.server.client-cache.total-clients"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Catalog Server Client Cache Total Clients"),

			Units: metrics.TUnitPtr(7),
		},
		"catalog.version": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("The full version string of the Catalog Server."),

			Key: thrift.StringPtr("catalog.version"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Catalog Version"),

			Units: metrics.TUnitPtr(7),
		},
		"catalogd.hms.cache.api.requests": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Catalogd HMS cache API requests."),

			Key: thrift.StringPtr("catalogd.hms.cache.api.requests"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Status of Catalogd HMS cache"),

			Units: metrics.TUnitPtr(7),
		},
		"catalogd.hms.cache.cache.hit.ratio": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Catalogd HMS cache hit ratio."),

			Key: thrift.StringPtr("catalogd.hms.cache.cache.hit.ratio"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Catalogd HMS cache hit ratio"),

			Units: metrics.TUnitPtr(7),
		},
		"catalogd.hms.cache.status.api.requests.15min": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Catalogd HMS cache API requests rate for last 15 min."),

			Key: thrift.StringPtr("catalogd.hms.cache.status.api.requests.15min"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Catalogd HMS cache API requests rate for last 15 minutes"),

			Units: metrics.TUnitPtr(7),
		},
		"catalogd.hms.cache.status.api.requests.1min": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Catalogd HMS cache API requests rate for last 1 min."),

			Key: thrift.StringPtr("catalogd.hms.cache.status.api.requests.1min"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Catalogd HMS cache API requests rate for last 1 minute"),

			Units: metrics.TUnitPtr(7),
		},
		"catalogd.hms.cache.status.api.requests.5min": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Catalogd HMS cache API requests rate for last 5 min."),

			Key: thrift.StringPtr("catalogd.hms.cache.status.api.requests.5min"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Catalogd HMS cache API requests rate for last 5 minutes"),

			Units: metrics.TUnitPtr(7),
		},
		"cgroups-mgr.active-cgroups": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of cgroups currently registered with the Cgroups Manager"),

			Key: thrift.StringPtr("cgroups-mgr.active-cgroups"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Cgroups Manager Active Cgroups"),

			Units: metrics.TUnitPtr(0),
		},
		"cluster-membership.backends.total": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of backends (both coordinators and executors) registered with the statestore"),

			Key: thrift.StringPtr("cluster-membership.backends.total"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Total number of backends registered with the statestore"),

			Units: metrics.TUnitPtr(7),
		},
		"cluster-membership.executor-groups.total": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of executor groups that have at least one executor"),

			Key: thrift.StringPtr("cluster-membership.executor-groups.total"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Total number of executor groups that have at least one executor"),

			Units: metrics.TUnitPtr(7),
		},
		"cluster-membership.executor-groups.total-healthy": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of executor groups that are in a healthy state, that is, have at least the configured minimum number of executors to be considered for admission"),

			Key: thrift.StringPtr("cluster-membership.executor-groups.total-healthy"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Total number of executor groups that are in a healthy state"),

			Units: metrics.TUnitPtr(7),
		},
		"cluster-membership.group-set.backends.total.$0": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of backends in the executor group set $0 registered with the statestore"),

			Key: thrift.StringPtr("cluster-membership.group-set.backends.total.$0"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Total number of executors in the executor group set $0 registered with the statestore"),

			Units: metrics.TUnitPtr(7),
		},
		"cluster-membership.group-set.executor-groups.total-healthy.$0": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of executor groups in the executor group set $0 that are in a healthy state, that is, have at least the configured minimum number of executors to be considered for admission"),

			Key: thrift.StringPtr("cluster-membership.group-set.executor-groups.total-healthy.$0"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Total number of executor groups in the executor group set $0 that are in a healthy state"),

			Units: metrics.TUnitPtr(7),
		},
		"cluster-membership.group-set.executor-groups.total.$0": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of executor groups in the executor group set $0 that have at least one executor"),

			Key: thrift.StringPtr("cluster-membership.group-set.executor-groups.total.$0"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Total number of executor groups in the executor group set $0 that have at least one executor"),

			Units: metrics.TUnitPtr(7),
		},
		"events-processor.avg-events-fetch-duration": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Average time taken to fetch a batch of metastore events"),

			Key: thrift.StringPtr("events-processor.avg-events-fetch-duration"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Average duration to fetch metastore events"),

			Units: metrics.TUnitPtr(9),
		},
		"events-processor.avg-events-process-duration": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Average time taken to process a batch of events received from metastore"),

			Key: thrift.StringPtr("events-processor.avg-events-process-duration"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Average duration to process a batch of metastore events"),

			Units: metrics.TUnitPtr(9),
		},
		"events-processor.events-received": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Total number of metastore events received"),

			Key: thrift.StringPtr("events-processor.events-received"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Total number of metastore events received"),

			Units: metrics.TUnitPtr(7),
		},
		"events-processor.events-received-15min-rate": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Exponentially weighted moving average (EWMA) of number of events received in last 15 min"),

			Key: thrift.StringPtr("events-processor.events-received-15min-rate"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("EWMA of number of events received in last 15 min"),

			Units: metrics.TUnitPtr(7),
		},
		"events-processor.events-received-1min-rate": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Exponentially weighted moving average (EWMA) of number of events received in last 1 min"),

			Key: thrift.StringPtr("events-processor.events-received-1min-rate"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("EWMA of events received in last 1 min"),

			Units: metrics.TUnitPtr(7),
		},
		"events-processor.events-received-5min-rate": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Exponentially weighted moving average (EWMA) of number of events received in last 5 min"),

			Key: thrift.StringPtr("events-processor.events-received-5min-rate"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("EWMA of number of events received in last 5 min"),

			Units: metrics.TUnitPtr(7),
		},
		"events-processor.events-skipped": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Total number of metastore events skipped"),

			Key: thrift.StringPtr("events-processor.events-skipped"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Total number of metastore events skipped"),

			Units: metrics.TUnitPtr(7),
		},
		"events-processor.last-synced-event-id": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Last metastore event id that the catalog server processed and synced to"),

			Key: thrift.StringPtr("events-processor.last-synced-event-id"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Last Synced Event Id"),

			Units: metrics.TUnitPtr(7),
		},
		"events-processor.status": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Metastore event processor status"),

			Key: thrift.StringPtr("events-processor.status"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("The status of Metastore event processor"),

			Units: metrics.TUnitPtr(7),
		},
		"external-data-source.class-cache.hits": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of cache hits in the External Data Source Class Cache"),

			Key: thrift.StringPtr("external-data-source.class-cache.hits"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("External Data Source Class Cache Hits"),

			Units: metrics.TUnitPtr(0),
		},
		"external-data-source.class-cache.misses": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of cache misses in the External Data Source Class Cache"),

			Key: thrift.StringPtr("external-data-source.class-cache.misses"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("External Data Source Class Cache Misses"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.backend-num-queries-executed": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of queries that executed on this backend over the life of the process."),

			Key: thrift.StringPtr("impala-server.backend-num-queries-executed"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Queries Executed On Backend"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.backend-num-queries-executing": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of queries currently executing on this backend."),

			Key: thrift.StringPtr("impala-server.backend-num-queries-executing"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Queries Executing On Backend"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.backends.client-cache.clients-in-use": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of active Impala Backend clients. These clients are for communication with other Impala Daemons."),

			Key: thrift.StringPtr("impala-server.backends.client-cache.clients-in-use"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Impala Backend Active Clients"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.backends.client-cache.total-clients": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of Impala Backend clients in this Impala Daemon's client cache. These clients are for communication with other Impala Daemons."),

			Key: thrift.StringPtr("impala-server.backends.client-cache.total-clients"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Impala Backend Total Clients"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.ddl-durations-ms": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Distribution of DDL operation latencies"),

			Key: thrift.StringPtr("impala-server.ddl-durations-ms"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("DDL latency distribution"),

			Units: metrics.TUnitPtr(8),
		},
		"impala-server.hedged-read-ops": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of hedged reads attempted over the life of the process"),

			Key: thrift.StringPtr("impala-server.hedged-read-ops"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Hedged Read Operations"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.hedged-read-ops-win": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of times hedged reads were faster than regular read operations"),

			Key: thrift.StringPtr("impala-server.hedged-read-ops-win"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Hedged Read Operations Won"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.io-mgr.bytes-read": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of bytes read by the IO manager."),

			Key: thrift.StringPtr("impala-server.io-mgr.bytes-read"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Server Io Mgr Bytes Read"),

			Units: metrics.TUnitPtr(3),
		},
		"impala-server.io-mgr.bytes-written": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of bytes written to disk by the IO manager."),

			Key: thrift.StringPtr("impala-server.io-mgr.bytes-written"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Server Io Mgr Bytes Written"),

			Units: metrics.TUnitPtr(3),
		},
		"impala-server.io-mgr.cached-bytes-read": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of cached bytes read by the IO manager."),

			Key: thrift.StringPtr("impala-server.io-mgr.cached-bytes-read"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Server Io Mgr Cached Bytes Read"),

			Units: metrics.TUnitPtr(3),
		},
		"impala-server.io-mgr.local-bytes-read": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of local bytes read by the IO manager."),

			Key: thrift.StringPtr("impala-server.io-mgr.local-bytes-read"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Server Io Mgr Local Bytes Read"),

			Units: metrics.TUnitPtr(3),
		},
		"impala-server.io-mgr.num-buffers": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of allocated IO buffers. IO buffers are shared by all queries."),

			Key: thrift.StringPtr("impala-server.io-mgr.num-buffers"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("IO Buffers"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.io-mgr.num-open-files": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The current number of files opened by the IO Manager"),

			Key: thrift.StringPtr("impala-server.io-mgr.num-open-files"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Open Files"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.io-mgr.num-unused-buffers": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of unused IO buffers. IO buffers are shared by all queries."),

			Key: thrift.StringPtr("impala-server.io-mgr.num-unused-buffers"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Unused IO Buffers"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.io-mgr.queue-$0.device-name": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("IO Manager device name."),

			Key: thrift.StringPtr("impala-server.io-mgr.queue-$0.device-name"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Impala Server Io Mgr Queue Device Name"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.io-mgr.queue-$0.read-latency": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Histogram of read operation times on disk."),

			Key: thrift.StringPtr("impala-server.io-mgr.queue-$0.read-latency"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Impala Server Io Mgr Read Latency Histogram"),

			Units: metrics.TUnitPtr(5),
		},
		"impala-server.io-mgr.queue-$0.read-size": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Histogram of read operation sizes on disk."),

			Key: thrift.StringPtr("impala-server.io-mgr.queue-$0.read-size"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Impala Server Io Mgr Read Size Histogram"),

			Units: metrics.TUnitPtr(3),
		},
		"impala-server.io-mgr.queue-$0.write-io-error": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of write io errors on disk."),

			Key: thrift.StringPtr("impala-server.io-mgr.queue-$0.write-io-error"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Server Io Mgr Write IO Error Count"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.io-mgr.queue-$0.write-latency": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Histogram of write operation times on disk."),

			Key: thrift.StringPtr("impala-server.io-mgr.queue-$0.write-latency"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Impala Server Io Mgr Write Latency Histogram"),

			Units: metrics.TUnitPtr(5),
		},
		"impala-server.io-mgr.queue-$0.write-size": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Histogram of write operation sizes on disk."),

			Key: thrift.StringPtr("impala-server.io-mgr.queue-$0.write-size"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Impala Server Io Mgr Write Size Histogram"),

			Units: metrics.TUnitPtr(3),
		},
		"impala-server.io-mgr.remote-data-cache-dropped-bytes": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of bytes not inserted in remote data cache due to concurrency limit."),

			Key: thrift.StringPtr("impala-server.io-mgr.remote-data-cache-dropped-bytes"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Server Io Mgr Remote Data Cache Bytes Not Inserted Due To Concurrency limit"),

			Units: metrics.TUnitPtr(3),
		},
		"impala-server.io-mgr.remote-data-cache-dropped-entries": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of entries not inserted in remote data cache due to concurrency limit."),

			Key: thrift.StringPtr("impala-server.io-mgr.remote-data-cache-dropped-entries"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Server Io Mgr Remote Data Cache Entries Not Inserted Due To Concurrency Limit"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.io-mgr.remote-data-cache-hit-bytes": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of bytes of hits in the remote data cache."),

			Key: thrift.StringPtr("impala-server.io-mgr.remote-data-cache-hit-bytes"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Server Io Mgr Remote Data Cache Hit In Bytes"),

			Units: metrics.TUnitPtr(3),
		},
		"impala-server.io-mgr.remote-data-cache-hit-count": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of hits in the remote data cache."),

			Key: thrift.StringPtr("impala-server.io-mgr.remote-data-cache-hit-count"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Server Io Mgr Remote Data Cache Hit Count"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.io-mgr.remote-data-cache-instant-evictions": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of instantaneous evictions from the remote data cache. An instantaneous eviction happens when the eviction policy rejects an entry during insert."),

			Key: thrift.StringPtr("impala-server.io-mgr.remote-data-cache-instant-evictions"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Server Io Mgr Remote Data Cache Num Instant Evictions"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.io-mgr.remote-data-cache-miss-bytes": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of bytes of misses in the remote data cache."),

			Key: thrift.StringPtr("impala-server.io-mgr.remote-data-cache-miss-bytes"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Server Io Mgr Remote Data Cache Miss In Bytes"),

			Units: metrics.TUnitPtr(3),
		},
		"impala-server.io-mgr.remote-data-cache-miss-count": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of misses in the remote data cache."),

			Key: thrift.StringPtr("impala-server.io-mgr.remote-data-cache-miss-count"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Server Io Mgr Remote Data Cache Miss Count"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.io-mgr.remote-data-cache-num-entries": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Current number of entries in the remote data cache."),

			Key: thrift.StringPtr("impala-server.io-mgr.remote-data-cache-num-entries"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Impala Server Io Mgr Remote Data Cache Num Entries"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.io-mgr.remote-data-cache-num-writes": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of writes into the remote data cache."),

			Key: thrift.StringPtr("impala-server.io-mgr.remote-data-cache-num-writes"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Server Io Mgr Remote Data Cache Num Writes"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.io-mgr.remote-data-cache-partition-$0.eviction-latency": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Histogram of eviction operation times for data cache partition"),

			Key: thrift.StringPtr("impala-server.io-mgr.remote-data-cache-partition-$0.eviction-latency"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Impala Server Io Mgr Remote Data Cache Partition Eviction Latency"),

			Units: metrics.TUnitPtr(5),
		},
		"impala-server.io-mgr.remote-data-cache-partition-$0.path": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Data Cache Partition Path"),

			Key: thrift.StringPtr("impala-server.io-mgr.remote-data-cache-partition-$0.path"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Impala Server Io Mgr Remote Data Cache Partition Path"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.io-mgr.remote-data-cache-partition-$0.read-latency": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Histogram of read operation times for data cache partition"),

			Key: thrift.StringPtr("impala-server.io-mgr.remote-data-cache-partition-$0.read-latency"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Impala Server Io Mgr Remote Data Cache Partition Read Latency"),

			Units: metrics.TUnitPtr(5),
		},
		"impala-server.io-mgr.remote-data-cache-partition-$0.write-latency": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Histogram of write operation times for data cache partition"),

			Key: thrift.StringPtr("impala-server.io-mgr.remote-data-cache-partition-$0.write-latency"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Impala Server Io Mgr Remote Data Cache Partition Write Latency"),

			Units: metrics.TUnitPtr(5),
		},
		"impala-server.io-mgr.remote-data-cache-total-bytes": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Current byte size of the remote data cache."),

			Key: thrift.StringPtr("impala-server.io-mgr.remote-data-cache-total-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Impala Server Io Mgr Remote Data Cache Bytes Size"),

			Units: metrics.TUnitPtr(3),
		},
		"impala-server.io-mgr.short-circuit-bytes-read": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of short-circuit bytes read by the IO manager."),

			Key: thrift.StringPtr("impala-server.io-mgr.short-circuit-bytes-read"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Server Io Mgr Short Circuit Bytes Read"),

			Units: metrics.TUnitPtr(3),
		},
		"impala-server.io-mgr.total-bytes": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of bytes used by IO buffers (used and unused)."),

			Key: thrift.StringPtr("impala-server.io-mgr.total-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("IO Buffers Total Size"),

			Units: metrics.TUnitPtr(3),
		},
		"impala-server.io.mgr.cached-file-handles-hit-count": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of cache hits for cached HDFS file handles"),

			Key: thrift.StringPtr("impala-server.io.mgr.cached-file-handles-hit-count"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("HDFS cached file handles hit count"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.io.mgr.cached-file-handles-hit-ratio": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("HDFS file handle cache hit ratio, between 0 and 1, where 1 means all reads were served from cached file handles."),

			Key: thrift.StringPtr("impala-server.io.mgr.cached-file-handles-hit-ratio"),

			Kind: metrics.TMetricKindPtr(3),

			Label: thrift.StringPtr("HDFS file handle cache hit ratio"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.io.mgr.cached-file-handles-miss-count": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of cache misses for cached HDFS file handles"),

			Key: thrift.StringPtr("impala-server.io.mgr.cached-file-handles-miss-count"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("HDFS cached file handles miss count"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.io.mgr.cached-file-handles-reopened": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of cached HDFS file handles reopened"),

			Key: thrift.StringPtr("impala-server.io.mgr.cached-file-handles-reopened"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("HDFS cached file handles reopened"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.io.mgr.num-cached-file-handles": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of currently cached HDFS file handles in the IO manager."),

			Key: thrift.StringPtr("impala-server.io.mgr.num-cached-file-handles"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Number of cached HDFS file handles"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.io.mgr.num-file-handles-outstanding": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of HDFS file handles that are currently in use by readers."),

			Key: thrift.StringPtr("impala-server.io.mgr.num-file-handles-outstanding"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Number of outstanding HDFS file handles"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.num-files-open-for-insert": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HDFS files currently open for writing."),

			Key: thrift.StringPtr("impala-server.num-files-open-for-insert"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Files Open For Insert"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.num-fragments": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of query fragments processed over the life of the process."),

			Key: thrift.StringPtr("impala-server.num-fragments"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Query Fragment Instances"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.num-fragments-in-flight": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of query fragment instances currently executing."),

			Key: thrift.StringPtr("impala-server.num-fragments-in-flight"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Query Fragment Instances Executing"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.num-open-beeswax-sessions": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of open Beeswax sessions."),

			Key: thrift.StringPtr("impala-server.num-open-beeswax-sessions"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Beeswax Sessions"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.num-open-hiveserver2-sessions": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of open HiveServer2 sessions."),

			Key: thrift.StringPtr("impala-server.num-open-hiveserver2-sessions"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("HiveServer2 Sessions"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.num-queries": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of queries processed over the life of the process"),

			Key: thrift.StringPtr("impala-server.num-queries"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Queries"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.num-queries-expired": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of queries expired due to inactivity."),

			Key: thrift.StringPtr("impala-server.num-queries-expired"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Queries Expired"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.num-queries-registered": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of queries registered on this Impala server instance. Includes queries that are in flight and waiting to be closed"),

			Key: thrift.StringPtr("impala-server.num-queries-registered"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Queries Registered"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.num-queries-spilled": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of queries for which any operator spilled."),

			Key: thrift.StringPtr("impala-server.num-queries-spilled"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Server Num Queries Spilled"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.num-sessions-expired": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of sessions expired due to inactivity."),

			Key: thrift.StringPtr("impala-server.num-sessions-expired"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Sessions Expired"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.query-durations-ms": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Distribution of query latencies"),

			Key: thrift.StringPtr("impala-server.query-durations-ms"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Query latency distribution"),

			Units: metrics.TUnitPtr(8),
		},
		"impala-server.ready": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Indicates if the Impala Server is ready."),

			Key: thrift.StringPtr("impala-server.ready"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Impala Server Ready"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.resultset-cache.total-bytes": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of bytes consumed for rows cached to support HS2 FETCH_FIRST."),

			Key: thrift.StringPtr("impala-server.resultset-cache.total-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Impala Server Resultset Cache Total Bytes"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.resultset-cache.total-num-rows": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of rows cached to support HS2 FETCH_FIRST."),

			Key: thrift.StringPtr("impala-server.resultset-cache.total-num-rows"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Impala Server Resultset Cache Total Num Rows"),

			Units: metrics.TUnitPtr(7),
		},
		"impala-server.scan-ranges.num-missing-volume-id": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of scan ranges read over the life of the process that did not have volume metadata"),

			Key: thrift.StringPtr("impala-server.scan-ranges.num-missing-volume-id"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Scan Ranges Missing Volume Information"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.scan-ranges.total": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of scan ranges read over the life of the process"),

			Key: thrift.StringPtr("impala-server.scan-ranges.total"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Scan Ranges"),

			Units: metrics.TUnitPtr(0),
		},
		"impala-server.version": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The full version string of the Impala Server."),

			Key: thrift.StringPtr("impala-server.version"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Impala Server Version"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.debug_action.fail": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of times the FAIL debug action returned an error. For testing only."),

			Key: thrift.StringPtr("impala.debug_action.fail"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("FAIL debug action hits"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.CatalogService.connection-setup-queue-size": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("The number of connections to the Catalog Service that have been accepted and are waiting to be setup."),

			Key: thrift.StringPtr("impala.thrift-server.CatalogService.connection-setup-queue-size"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Catalog Service Connections Queued for Setup"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.CatalogService.connection-setup-time": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Amount of time clients of Catalog Service spent waiting for connection to be set up"),

			Key: thrift.StringPtr("impala.thrift-server.CatalogService.connection-setup-time"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Catalog Service client connection setup time"),

			Units: metrics.TUnitPtr(10),
		},
		"impala.thrift-server.CatalogService.connections-in-use": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("The number of active catalog service connections to this Catalog Server."),

			Key: thrift.StringPtr("impala.thrift-server.CatalogService.connections-in-use"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Catalog Service Active Connections"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.CatalogService.svc-thread-wait-time": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("Amount of time clients of Catalog Service spent waiting for service threads"),

			Key: thrift.StringPtr("impala.thrift-server.CatalogService.svc-thread-wait-time"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Catalog Service clients' wait time for service threads"),

			Units: metrics.TUnitPtr(10),
		},
		"impala.thrift-server.CatalogService.timedout-cnxn-requests": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("The number of connection requests to the Catalog Service that have been timed out waiting to be setup."),

			Key: thrift.StringPtr("impala.thrift-server.CatalogService.timedout-cnxn-requests"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Catalog Service Connection Requests Timed Out"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.CatalogService.total-connections": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER"},

			Description: thrift.StringPtr("The total number of connections made to this Catalog Server's catalog service  over its lifetime."),

			Key: thrift.StringPtr("impala.thrift-server.CatalogService.total-connections"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Catalog Service Total Connections"),

			Units: metrics.TUnitPtr(0),
		},
		"impala.thrift-server.StatestoreService.connection-setup-queue-size": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of connections to the Statestore Service that have been accepted and are waiting to be setup."),

			Key: thrift.StringPtr("impala.thrift-server.StatestoreService.connection-setup-queue-size"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Statestore Service Connections Queued for Setup"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.StatestoreService.connection-setup-time": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("Amount of time clients of StateStore Service spent waiting for connection to be set up"),

			Key: thrift.StringPtr("impala.thrift-server.StatestoreService.connection-setup-time"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("StateStore Service client connection setup time"),

			Units: metrics.TUnitPtr(10),
		},
		"impala.thrift-server.StatestoreService.connections-in-use": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("The number of active connections to this StateStore's service."),

			Key: thrift.StringPtr("impala.thrift-server.StatestoreService.connections-in-use"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("StateStore Service Active Connections"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.StatestoreService.svc-thread-wait-time": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("Amount of time clients of StateStore Service spent waiting for service threads"),

			Key: thrift.StringPtr("impala.thrift-server.StatestoreService.svc-thread-wait-time"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("StateStore Service clients' wait time for service threads"),

			Units: metrics.TUnitPtr(10),
		},
		"impala.thrift-server.StatestoreService.timedout-cnxn-requests": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of connection requests to the Statestore Service that have been timed out waiting to be setup."),

			Key: thrift.StringPtr("impala.thrift-server.StatestoreService.timedout-cnxn-requests"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Statestore Service Connection Requests Timed Out"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.StatestoreService.total-connections": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("The total number of connections made to this StateStore's StateStore service over its lifetime."),

			Key: thrift.StringPtr("impala.thrift-server.StatestoreService.total-connections"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("StateStore Service Connections"),

			Units: metrics.TUnitPtr(0),
		},
		"impala.thrift-server.backend.connection-setup-queue-size": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of connections to the Impala Backend Server that have been accepted and are waiting to be setup."),

			Key: thrift.StringPtr("impala.thrift-server.backend.connection-setup-queue-size"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Impala Backend Server Connections Queued for Setup"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.backend.connection-setup-time": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Amount of time clients of Impala Backend Server spent waiting for connection to be set up"),

			Key: thrift.StringPtr("impala.thrift-server.backend.connection-setup-time"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Impala Backend client connections setup time"),

			Units: metrics.TUnitPtr(10),
		},
		"impala.thrift-server.backend.connections-in-use": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of active Impala Backend client connections to this Impala Daemon."),

			Key: thrift.StringPtr("impala.thrift-server.backend.connections-in-use"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Impala Backend Server Active Connections"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.backend.svc-thread-wait-time": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Amount of time clients of Impala Backend Server spent waiting for service threads"),

			Key: thrift.StringPtr("impala.thrift-server.backend.svc-thread-wait-time"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Impala Backend Server clients' wait time for service threads"),

			Units: metrics.TUnitPtr(10),
		},
		"impala.thrift-server.backend.timedout-cnxn-requests": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of connection requests to the Impala Backend Server that have been timed out waiting to be setup."),

			Key: thrift.StringPtr("impala.thrift-server.backend.timedout-cnxn-requests"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Impala Backend Server Connection Requests Timed Out"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.backend.total-connections": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of Impala Backend client connections made to this Impala Daemon over its lifetime."),

			Key: thrift.StringPtr("impala.thrift-server.backend.total-connections"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Impala Backend Server Connections"),

			Units: metrics.TUnitPtr(0),
		},
		"impala.thrift-server.beeswax-frontend.connection-setup-queue-size": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of Beeswax API connections to this Impala Daemon that have been accepted and are waiting to be setup."),

			Key: thrift.StringPtr("impala.thrift-server.beeswax-frontend.connection-setup-queue-size"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Beeswax API Connections Queued for Setup"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.beeswax-frontend.connection-setup-time": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Amount of time clients of Beeswax API spent waiting for connection to be set up"),

			Key: thrift.StringPtr("impala.thrift-server.beeswax-frontend.connection-setup-time"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Beeswax API client connection setup time"),

			Units: metrics.TUnitPtr(10),
		},
		"impala.thrift-server.beeswax-frontend.connections-in-use": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of active Beeswax API connections to this Impala Daemon."),

			Key: thrift.StringPtr("impala.thrift-server.beeswax-frontend.connections-in-use"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Beeswax API Active Connections"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.beeswax-frontend.svc-thread-wait-time": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Amount of time clients of Beeswax API spent waiting for service threads"),

			Key: thrift.StringPtr("impala.thrift-server.beeswax-frontend.svc-thread-wait-time"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Beeswax API clients' wait time for service threads"),

			Units: metrics.TUnitPtr(10),
		},
		"impala.thrift-server.beeswax-frontend.timedout-cnxn-requests": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of Beeswax API connection requests to this Impala Daemon that have been timed out waiting to be setup."),

			Key: thrift.StringPtr("impala.thrift-server.beeswax-frontend.timedout-cnxn-requests"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Beeswax API Connection Requests Timed Out"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.beeswax-frontend.total-connections": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of Beeswax API connections made to this Impala Daemon over its lifetime."),

			Key: thrift.StringPtr("impala.thrift-server.beeswax-frontend.total-connections"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Beeswax API Total Connections"),

			Units: metrics.TUnitPtr(0),
		},
		"impala.thrift-server.external-frontend.connection-setup-queue-size": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of External Frontend API connections to this Impala Daemon that have been accepted and are waiting to be setup."),

			Key: thrift.StringPtr("impala.thrift-server.external-frontend.connection-setup-queue-size"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("External Frontend API Connections Queued for Setup"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.external-frontend.connection-setup-time": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Amount of time clients of External Frontend API spent waiting for connection to be set up"),

			Key: thrift.StringPtr("impala.thrift-server.external-frontend.connection-setup-time"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("External Frontend API client connection setup time"),

			Units: metrics.TUnitPtr(10),
		},
		"impala.thrift-server.external-frontend.connections-in-use": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of active External Frontend API connections to this Impala Daemon."),

			Key: thrift.StringPtr("impala.thrift-server.external-frontend.connections-in-use"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("External Frontend API Active Connections"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.external-frontend.svc-thread-wait-time": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Amount of time clients of External Frontend API spent waiting for service threads"),

			Key: thrift.StringPtr("impala.thrift-server.external-frontend.svc-thread-wait-time"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("External Frontend API clients' wait time for service threads"),

			Units: metrics.TUnitPtr(10),
		},
		"impala.thrift-server.external-frontend.timedout-cnxn-requests": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of External Frontend API connection requests to this Impala Daemon that have been timed out waiting to be setup."),

			Key: thrift.StringPtr("impala.thrift-server.external-frontend.timedout-cnxn-requests"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("External Frontend API Connection Requests Timed Out"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.external-frontend.total-connections": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of External Frontend API connections made to this Impala Daemon over its lifetime."),

			Key: thrift.StringPtr("impala.thrift-server.external-frontend.total-connections"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("External Frontend API Total Connections"),

			Units: metrics.TUnitPtr(0),
		},
		"impala.thrift-server.hiveserver2-frontend.connection-setup-queue-size": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 API connections to this Impala Daemon that have been accepted and are waiting to be setup."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-frontend.connection-setup-queue-size"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("HiveServer2 API Connections Queued for Setup"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-frontend.connection-setup-time": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Amount of time clients of HiveServer2 API spent waiting for connection to be set up"),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-frontend.connection-setup-time"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("HiveServer2 API client connection setup time"),

			Units: metrics.TUnitPtr(10),
		},
		"impala.thrift-server.hiveserver2-frontend.connections-in-use": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of active HiveServer2 API connections to this Impala Daemon."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-frontend.connections-in-use"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("HiveServer2 API Active Connections"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-frontend.svc-thread-wait-time": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Amount of time clients of HiveServer2 API spent waiting for service threads"),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-frontend.svc-thread-wait-time"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("HiveServer2 API clients' wait time for service threads"),

			Units: metrics.TUnitPtr(10),
		},
		"impala.thrift-server.hiveserver2-frontend.timedout-cnxn-requests": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 API connection requests to this Impala Daemon that have been timed out waiting to be setup."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-frontend.timedout-cnxn-requests"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("HiveServer2 API Connection Requests Timed Out"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-frontend.total-connections": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of HiveServer2 API connections made to this Impala Daemon over its lifetime."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-frontend.total-connections"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("HiveServer2 API Total Connections"),

			Units: metrics.TUnitPtr(0),
		},
		"impala.thrift-server.hiveserver2-http-frontend.connection-setup-queue-size": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 HTTP API connections to this Impala Daemon that have been accepted and are waiting to be setup."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.connection-setup-queue-size"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("HiveServer2 HTTP API Connections Queued for Setup"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-http-frontend.connection-setup-time": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Amount of time clients of HiveServer2 HTTP API spent waiting for connection to be set up"),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.connection-setup-time"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("HiveServer2 HTTP API client connection setup time"),

			Units: metrics.TUnitPtr(10),
		},
		"impala.thrift-server.hiveserver2-http-frontend.connections-in-use": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of active HiveServer2 HTTP API connections to this Impala Daemon."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.connections-in-use"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("HiveServer2 HTTP API Active Connections"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-http-frontend.svc-thread-wait-time": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Amount of time clients of HiveServer2 HTTP API spent waiting for service threads"),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.svc-thread-wait-time"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("HiveServer2 HTTP API clients' wait time for service threads"),

			Units: metrics.TUnitPtr(10),
		},
		"impala.thrift-server.hiveserver2-http-frontend.timedout-cnxn-requests": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 HTTP API connection requests to this Impala Daemon that have been timed out waiting to be setup."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.timedout-cnxn-requests"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("HiveServer2 HTTP API Connection Requests Timed Out"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-http-frontend.total-basic-auth-failure": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 HTTP API connection requests to this Impala Daemon that failed to authenticate with Basic auth due to an invalid username or password."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.total-basic-auth-failure"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("HiveServer2 HTTP API Connection Basic Auth Failure"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-http-frontend.total-basic-auth-success": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 HTTP API connection requests to this Impala Daemon that were successfully authenticated with Basic (username/password) auth."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.total-basic-auth-success"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("HiveServer2 HTTP API Connection Basic Auth Success"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-http-frontend.total-connections": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of HiveServer2 HTTP API connections made to this Impala Daemon over its lifetime."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.total-connections"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("HiveServer2 HTTP API Total Connections"),

			Units: metrics.TUnitPtr(0),
		},
		"impala.thrift-server.hiveserver2-http-frontend.total-cookie-auth-failure": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 HTTP API connection requests to this Impala Daemon that provided an invalid cookie."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.total-cookie-auth-failure"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("HiveServer2 HTTP API Connection Cookie Auth Failure"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-http-frontend.total-cookie-auth-success": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 HTTP API connection requests to this Impala Daemon that were successfully authenticated using a cookie."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.total-cookie-auth-success"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("HiveServer2 HTTP API Connection Cookie Auth Success"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-http-frontend.total-jwt-token-auth-failure": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 HTTP API connection requests to this Impala Daemon that were attempted to authenticate using JWT Token but were unsuccessful."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.total-jwt-token-auth-failure"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("HiveServer2 HTTP API Connection JWT Token Failure"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-http-frontend.total-jwt-token-auth-success": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 HTTP API connection requests to this Impala Daemon that were successfully authenticated using JWT Token."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.total-jwt-token-auth-success"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("HiveServer2 HTTP API Connection JWT Token Success"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-http-frontend.total-negotiate-auth-failure": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 HTTP API connection requests to this Impala Daemon that attempted to authenticate with Kerberos but were unsuccessful."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.total-negotiate-auth-failure"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("HiveServer2 HTTP API Connection Kerberos Auth Failure"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-http-frontend.total-negotiate-auth-success": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 HTTP API connection requests to this Impala Daemon that were successfully authenticated with Kerberos"),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.total-negotiate-auth-success"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("HiveServer2 HTTP API Connection Kerberos Auth Success"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-http-frontend.total-saml-auth-failure": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 HTTP API connection requests to this Impala Daemon that were attempted to authenticate using SAML but were unsuccessful."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.total-saml-auth-failure"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("HiveServer2 HTTP API Connection SAML Failure"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-http-frontend.total-saml-auth-success": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 HTTP API connection requests to this Impala Daemon that were successfully authenticated using SAML."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.total-saml-auth-success"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("HiveServer2 HTTP API Connection SAML Success"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-http-frontend.total-trusted-auth-header-check-success": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 HTTP API connection requests to this Impala Daemon that skipped authentication as they have a trusted auth header."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.total-trusted-auth-header-check-success"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("HiveServer2 HTTP API Connection Trusted Auth Header Check Success"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.thrift-server.hiveserver2-http-frontend.total-trusted-domain-check-success": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of HiveServer2 HTTP API connection requests to this Impala Daemon that skipped authentication as they originated from a trusted domain."),

			Key: thrift.StringPtr("impala.thrift-server.hiveserver2-http-frontend.total-trusted-domain-check-success"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("HiveServer2 HTTP API Connection Trusted Domain Check Success"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.webserver.total-basic-auth-failure": &TMetricDef{
			Contexts: []string{
				"IMPALAD", "CATALOGSERVER", "STATESTORE"},

			Description: thrift.StringPtr("The number of HTTP connection requests to this daemon's webserver that attempted to authenticate with LDAP but were unsuccessful."),

			Key: thrift.StringPtr("impala.webserver.total-basic-auth-failure"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Webserver HTTP Connection LDAP Auth Failure"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.webserver.total-basic-auth-success": &TMetricDef{
			Contexts: []string{
				"IMPALAD", "CATALOGSERVER", "STATESTORE"},

			Description: thrift.StringPtr("The number of HTTP connection requests to this daemon's webserver that were successfully authenticated with LDAP"),

			Key: thrift.StringPtr("impala.webserver.total-basic-auth-success"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Webserver HTTP Connection LDAP Auth Success"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.webserver.total-cookie-auth-failure": &TMetricDef{
			Contexts: []string{
				"IMPALAD", "CATALOGSERVER", "STATESTORE"},

			Description: thrift.StringPtr("The number of HTTP connection requests to this daemon's webserver that provided an invalid cookie."),

			Key: thrift.StringPtr("impala.webserver.total-cookie-auth-failure"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Webserver HTTP Connection Cookie Auth Failure"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.webserver.total-cookie-auth-success": &TMetricDef{
			Contexts: []string{
				"IMPALAD", "CATALOGSERVER", "STATESTORE"},

			Description: thrift.StringPtr("The number of HTTP connection requests to this daemon's webserver that were successfully authenticated using a cookie."),

			Key: thrift.StringPtr("impala.webserver.total-cookie-auth-success"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Webserver HTTP Connection Cookie Auth Success"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.webserver.total-jwt-token-auth-failure": &TMetricDef{
			Contexts: []string{
				"IMPALAD", "CATALOGSERVER", "STATESTORE"},

			Description: thrift.StringPtr("The number of HTTP connection requests to this daemon's webserver that provided an invalid JWT token."),

			Key: thrift.StringPtr("impala.webserver.total-jwt-token-auth-failure"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Webserver HTTP Connection JWT Token Auth Failure"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.webserver.total-jwt-token-auth-success": &TMetricDef{
			Contexts: []string{
				"IMPALAD", "CATALOGSERVER", "STATESTORE"},

			Description: thrift.StringPtr("The number of HTTP connection requests to this daemon's webserver that were successfully authenticated using a JWT token."),

			Key: thrift.StringPtr("impala.webserver.total-jwt-token-auth-success"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Webserver HTTP Connection JWT Token Auth Success"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.webserver.total-negotiate-auth-failure": &TMetricDef{
			Contexts: []string{
				"IMPALAD", "CATALOGSERVER", "STATESTORE"},

			Description: thrift.StringPtr("The number of HTTP connection requests to this daemon's webserver that attempted to authenticate with Kerberos but were unsuccessful."),

			Key: thrift.StringPtr("impala.webserver.total-negotiate-auth-failure"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Webserver HTTP Connection Kerberos Auth Failure"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.webserver.total-negotiate-auth-success": &TMetricDef{
			Contexts: []string{
				"IMPALAD", "CATALOGSERVER", "STATESTORE"},

			Description: thrift.StringPtr("The number of HTTP connection requests to this daemon's webserver that were successfully authenticated with Kerberos"),

			Key: thrift.StringPtr("impala.webserver.total-negotiate-auth-success"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Webserver HTTP Connection Kerberos Auth Success"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.webserver.total-trusted-auth-header-check-success": &TMetricDef{
			Contexts: []string{
				"IMPALAD", "CATALOGSERVER", "STATESTORE"},

			Description: thrift.StringPtr("The number of HTTP connection requests to this daemon's webserver that skipped authentication as they have a trusted auth header."),

			Key: thrift.StringPtr("impala.webserver.total-trusted-auth-header-check-success"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Webserver HTTP Connection Trusted Auth Header Check Success"),

			Units: metrics.TUnitPtr(7),
		},
		"impala.webserver.total-trusted-domain-check-success": &TMetricDef{
			Contexts: []string{
				"IMPALAD", "CATALOGSERVER", "STATESTORE"},

			Description: thrift.StringPtr("The number of HTTP connection requests to this daemon's webserver that originated from a trusted domain."),

			Key: thrift.StringPtr("impala.webserver.total-trusted-domain-check-success"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Webserver HTTP Connection Trusted Domain Check Success"),

			Units: metrics.TUnitPtr(7),
		},
		"jvm.$0.committed-usage-bytes": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Jvm $0 Committed Usage Bytes"),

			Key: thrift.StringPtr("jvm.$0.committed-usage-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Jvm $0 Committed Usage Bytes"),

			Units: metrics.TUnitPtr(3),
		},
		"jvm.$0.current-usage-bytes": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Jvm $0 Current Usage Bytes"),

			Key: thrift.StringPtr("jvm.$0.current-usage-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Jvm $0 Current Usage Bytes"),

			Units: metrics.TUnitPtr(3),
		},
		"jvm.$0.init-usage-bytes": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Jvm $0 Init Usage Bytes"),

			Key: thrift.StringPtr("jvm.$0.init-usage-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Jvm $0 Init Usage Bytes"),

			Units: metrics.TUnitPtr(3),
		},
		"jvm.$0.max-usage-bytes": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Jvm $0 Max Usage Bytes"),

			Key: thrift.StringPtr("jvm.$0.max-usage-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Jvm $0 Max Usage Bytes"),

			Units: metrics.TUnitPtr(3),
		},
		"jvm.$0.peak-committed-usage-bytes": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Jvm $0 Peak Committed Usage Bytes"),

			Key: thrift.StringPtr("jvm.$0.peak-committed-usage-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Jvm $0 Peak Committed Usage Bytes"),

			Units: metrics.TUnitPtr(3),
		},
		"jvm.$0.peak-current-usage-bytes": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Jvm $0 Peak Current Usage Bytes"),

			Key: thrift.StringPtr("jvm.$0.peak-current-usage-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Jvm $0 Peak Current Usage Bytes"),

			Units: metrics.TUnitPtr(3),
		},
		"jvm.$0.peak-init-usage-bytes": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Jvm $0 Peak Init Usage Bytes"),

			Key: thrift.StringPtr("jvm.$0.peak-init-usage-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Jvm $0 Peak Init Usage Bytes"),

			Units: metrics.TUnitPtr(3),
		},
		"jvm.$0.peak-max-usage-bytes": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Jvm $0 Peak Max Usage Bytes"),

			Key: thrift.StringPtr("jvm.$0.peak-max-usage-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Jvm $0 Peak Max Usage Bytes"),

			Units: metrics.TUnitPtr(3),
		},
		"jvm.gc_count": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Jvm Garbage Collection Count"),

			Key: thrift.StringPtr("jvm.gc_count"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Jvm Garbage Collection Count"),

			Units: metrics.TUnitPtr(0),
		},
		"jvm.gc_num_info_threshold_exceeded": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Jvm Pause Detection Info Threshold Exceeded"),

			Key: thrift.StringPtr("jvm.gc_num_info_threshold_exceeded"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Jvm Pause Detector Info Threshold Exceeded"),

			Units: metrics.TUnitPtr(0),
		},
		"jvm.gc_num_warn_threshold_exceeded": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Jvm Pause Detection Warning Threshold Exceeded"),

			Key: thrift.StringPtr("jvm.gc_num_warn_threshold_exceeded"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Jvm Pause Detector Warn Threshold Exceeded"),

			Units: metrics.TUnitPtr(0),
		},
		"jvm.gc_time_millis": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Jvm Garbage Collection Time"),

			Key: thrift.StringPtr("jvm.gc_time_millis"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Jvm Garbage Collection Time"),

			Units: metrics.TUnitPtr(8),
		},
		"jvm.gc_total_extra_sleep_time_millis": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Jvm Pause Detection Extra Sleep Time"),

			Key: thrift.StringPtr("jvm.gc_total_extra_sleep_time_millis"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Jvm Pause Detector Extra Sleep Time"),

			Units: metrics.TUnitPtr(8),
		},
		"kudu-client.version": &TMetricDef{
			Contexts: []string{
				"IMPALAD", "CATALOGSERVER", "STATESTORE"},

			Description: thrift.StringPtr("A version string identifying the Kudu client"),

			Key: thrift.StringPtr("kudu-client.version"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Kudu Client Version"),

			Units: metrics.TUnitPtr(7),
		},
		"mem-tracker.$0.current_usage_bytes": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Memtracker $0 Current Usage Bytes"),

			Key: thrift.StringPtr("mem-tracker.$0.current_usage_bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Memtracker $0 Current Usage Bytes"),

			Units: metrics.TUnitPtr(3),
		},
		"mem-tracker.$0.peak_usage_bytes": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Memtracker $0 Peak Usage Bytes"),

			Key: thrift.StringPtr("mem-tracker.$0.peak_usage_bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Memtracker $0 Peak Max Bytes"),

			Units: metrics.TUnitPtr(3),
		},
		"mem-tracker.process.bytes-freed-by-last-gc": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The amount of memory freed by the last memory tracker garbage collection."),

			Key: thrift.StringPtr("mem-tracker.process.bytes-freed-by-last-gc"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("MemTracker Bytes Freed By Last Garbage Collection"),

			Units: metrics.TUnitPtr(3),
		},
		"mem-tracker.process.bytes-over-limit": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The amount of memory by which the process was over its memory limit the last time the memory limit was encountered."),

			Key: thrift.StringPtr("mem-tracker.process.bytes-over-limit"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("MemTracker Bytes Over Limit"),

			Units: metrics.TUnitPtr(3),
		},
		"mem-tracker.process.limit": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The process memory tracker limit."),

			Key: thrift.StringPtr("mem-tracker.process.limit"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Process Tracker Limit"),

			Units: metrics.TUnitPtr(3),
		},
		"mem-tracker.process.num-gcs": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The total number of garbage collections performed by the memory tracker over the life of the process."),

			Key: thrift.StringPtr("mem-tracker.process.num-gcs"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("MemTracker Garbage Collections"),

			Units: metrics.TUnitPtr(0),
		},
		"memory.anon-huge-page-bytes": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Total bytes of anonymous (a.k.a. transparent) huge pages used by this process."),

			Key: thrift.StringPtr("memory.anon-huge-page-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Anonymous Huge Pages."),

			Units: metrics.TUnitPtr(3),
		},
		"memory.mapped-bytes": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Total bytes of memory mappings in this process (the virtual memory size)."),

			Key: thrift.StringPtr("memory.mapped-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Total Virtual Memory."),

			Units: metrics.TUnitPtr(3),
		},
		"memory.num-maps": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Total number of memory mappings in this process."),

			Key: thrift.StringPtr("memory.num-maps"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Number of memory mappings."),

			Units: metrics.TUnitPtr(7),
		},
		"memory.rss": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Resident set size (RSS) of this process, including TCMalloc, buffer pool and Jvm."),

			Key: thrift.StringPtr("memory.rss"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Resident set size."),

			Units: metrics.TUnitPtr(3),
		},
		"memory.thp.defrag": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("The system-wide 'defrag' setting for Transparent Huge Pages."),

			Key: thrift.StringPtr("memory.thp.defrag"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Transparent Huge Pages Defrag Enabled."),

			Units: metrics.TUnitPtr(7),
		},
		"memory.thp.enabled": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("The system-wide 'enabled' setting for Transparent Huge Pages."),

			Key: thrift.StringPtr("memory.thp.enabled"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Transparent Huge Pages Enabled."),

			Units: metrics.TUnitPtr(7),
		},
		"memory.thp.khugepaged-defrag": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("The system-wide 'defrag' setting for khugepaged."),

			Key: thrift.StringPtr("memory.thp.khugepaged-defrag"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Khugepaged Defrag Enabled."),

			Units: metrics.TUnitPtr(7),
		},
		"memory.total-used": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Total memory currently used by TCMalloc and buffer pool."),

			Key: thrift.StringPtr("memory.total-used"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Total Used Memory."),

			Units: metrics.TUnitPtr(3),
		},
		"process-start-time": &TMetricDef{
			Contexts: []string{
				"IMPALAD", "CATALOGSERVER", "STATESTORE"},

			Description: thrift.StringPtr("The local start time of the process"),

			Key: thrift.StringPtr("process-start-time"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Process Start Time"),

			Units: metrics.TUnitPtr(7),
		},
		"request-pool-service.resolve-pool-duration-ms": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Time (ms) spent resolving request request pools."),

			Key: thrift.StringPtr("request-pool-service.resolve-pool-duration-ms"),

			Kind: metrics.TMetricKindPtr(3),

			Label: thrift.StringPtr("Request Pool Service Resolve Pool Duration Ms"),

			Units: metrics.TUnitPtr(8),
		},
		"rpc-method.$0.call_duration": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "STATESTORE", "IMPALAD"},

			Description: thrift.StringPtr("Duration (ms) of RPC calls to $0"),

			Key: thrift.StringPtr("rpc-method.$0.call_duration"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("$0 RPC Call Duration"),

			Units: metrics.TUnitPtr(8),
		},
		"rpc.$0.rpcs_queue_overflow": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Service $0: Total number of incoming RPCs that were rejected due to overflow of the service queue."),

			Key: thrift.StringPtr("rpc.$0.rpcs_queue_overflow"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Service $0 Incoming RPC Queue Overflows"),

			Units: metrics.TUnitPtr(0),
		},
		"sanitizer-total-bytes-allocated": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Bytes allocated from the sanitizer malloc (Sanitizer debug builds only)"),

			Key: thrift.StringPtr("sanitizer-total-bytes-allocated"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Sanitizer Malloc Bytes Allocated"),

			Units: metrics.TUnitPtr(3),
		},
		"senders-blocked-on-recvr-creation": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of senders waiting for receiving fragment to initialize"),

			Key: thrift.StringPtr("senders-blocked-on-recvr-creation"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Number of senders waiting for receiving fragment to initialize."),

			Units: metrics.TUnitPtr(7),
		},
		"simple-scheduler.assignments.total": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of assignments"),

			Key: thrift.StringPtr("simple-scheduler.assignments.total"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Assignments"),

			Units: metrics.TUnitPtr(0),
		},
		"simple-scheduler.initialized": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Indicates whether the scheduler has been initialized."),

			Key: thrift.StringPtr("simple-scheduler.initialized"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Simple Scheduler Initialized"),

			Units: metrics.TUnitPtr(7),
		},
		"simple-scheduler.local-assignments.total": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Number of assignments operating on local data"),

			Key: thrift.StringPtr("simple-scheduler.local-assignments.total"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Local Assignments"),

			Units: metrics.TUnitPtr(0),
		},
		"simple-scheduler.num-backends": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of backend connections from this Impala Daemon to other Impala Daemons."),

			Key: thrift.StringPtr("simple-scheduler.num-backends"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Backend Connections"),

			Units: metrics.TUnitPtr(7),
		},
		"statestore-subscriber.connected": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Whether the Impala Daemon considers itself connected to the StateStore."),

			Key: thrift.StringPtr("statestore-subscriber.connected"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("StateStore Connectivity"),

			Units: metrics.TUnitPtr(7),
		},
		"statestore-subscriber.heartbeat-interval-time": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("The time (sec) between Statestore heartbeats."),

			Key: thrift.StringPtr("statestore-subscriber.heartbeat-interval-time"),

			Kind: metrics.TMetricKindPtr(3),

			Label: thrift.StringPtr("Statestore Subscriber Heartbeat Interval Time"),

			Units: metrics.TUnitPtr(9),
		},
		"statestore-subscriber.last-recovery-duration": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("The amount of time the StateStore subscriber took to recover the connection the last time it was lost."),

			Key: thrift.StringPtr("statestore-subscriber.last-recovery-duration"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("StateStore Subscriber Last Recovery Duration"),

			Units: metrics.TUnitPtr(9),
		},
		"statestore-subscriber.last-recovery-time": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("The local time that the last statestore recovery happened."),

			Key: thrift.StringPtr("statestore-subscriber.last-recovery-time"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Statestore Subscriber Last Recovery Time"),

			Units: metrics.TUnitPtr(7),
		},
		"statestore-subscriber.num-connection-failures": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Number of times that the Daemon detected a loss of connectivity to the StateStore."),

			Key: thrift.StringPtr("statestore-subscriber.num-connection-failures"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("StateStore Connectivity Loss Count."),

			Units: metrics.TUnitPtr(0),
		},
		"statestore-subscriber.registration-id": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("The most recent registration ID for this subscriber with the statestore. Set to 'N/A' if no registration has been completed"),

			Key: thrift.StringPtr("statestore-subscriber.registration-id"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Statestore Subscriber Registration Id"),

			Units: metrics.TUnitPtr(7),
		},
		"statestore-subscriber.statestore.client-cache.clients-in-use": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("The number of active StateStore subscriber clients in this Impala Daemon's client cache. These clients are for communication from this role to the StateStore."),

			Key: thrift.StringPtr("statestore-subscriber.statestore.client-cache.clients-in-use"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("StateStore Subscriber Active Clients"),

			Units: metrics.TUnitPtr(7),
		},
		"statestore-subscriber.statestore.client-cache.total-clients": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("The total number of StateStore subscriber clients in this Impala Daemon's client cache. These clients are for communication from this role to the StateStore."),

			Key: thrift.StringPtr("statestore-subscriber.statestore.client-cache.total-clients"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("StateStore Subscriber Total Clients"),

			Units: metrics.TUnitPtr(7),
		},
		"statestore-subscriber.topic-$0.processing-time-s": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Statestore Subscriber Topic $0 Processing Time"),

			Key: thrift.StringPtr("statestore-subscriber.topic-$0.processing-time-s"),

			Kind: metrics.TMetricKindPtr(3),

			Label: thrift.StringPtr("Statestore Subscriber Topic $0 Processing Time"),

			Units: metrics.TUnitPtr(9),
		},
		"statestore-subscriber.topic-$0.update-interval": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Interval between topic updates for Topic $0"),

			Key: thrift.StringPtr("statestore-subscriber.topic-$0.update-interval"),

			Kind: metrics.TMetricKindPtr(3),

			Label: thrift.StringPtr("Statestore Subscriber Topic $0 Update Interval"),

			Units: metrics.TUnitPtr(9),
		},
		"statestore-subscriber.topic-update-duration": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("The time (sec) taken to process Statestore subscriber topic updates."),

			Key: thrift.StringPtr("statestore-subscriber.topic-update-duration"),

			Kind: metrics.TMetricKindPtr(3),

			Label: thrift.StringPtr("Statestore Subscriber Topic Update Duration"),

			Units: metrics.TUnitPtr(9),
		},
		"statestore-subscriber.topic-update-interval-time": &TMetricDef{
			Contexts: []string{
				"CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("The time (sec) between Statestore subscriber topic updates."),

			Key: thrift.StringPtr("statestore-subscriber.topic-update-interval-time"),

			Kind: metrics.TMetricKindPtr(3),

			Label: thrift.StringPtr("Statestore Subscriber Topic Update Interval Time"),

			Units: metrics.TUnitPtr(9),
		},
		"statestore.heartbeat-durations": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("The time (sec) spent sending heartbeat RPCs. Includes subscriber-side processing time and network transmission time."),

			Key: thrift.StringPtr("statestore.heartbeat-durations"),

			Kind: metrics.TMetricKindPtr(3),

			Label: thrift.StringPtr("Statestore Heartbeat Durations"),

			Units: metrics.TUnitPtr(9),
		},
		"statestore.live-backends": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("The number of registered Statestore subscribers."),

			Key: thrift.StringPtr("statestore.live-backends"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Statestore Live Backends"),

			Units: metrics.TUnitPtr(7),
		},
		"statestore.live-backends.list": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("The set of all live Statestore subscribers."),

			Key: thrift.StringPtr("statestore.live-backends.list"),

			Kind: metrics.TMetricKindPtr(4),

			Label: thrift.StringPtr("Statestore Live Backends List"),

			Units: metrics.TUnitPtr(7),
		},
		"statestore.priority-topic-update-durations": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("The time (sec) spent sending priority topic update RPCs. Includes subscriber-side processing time and network transmission time."),

			Key: thrift.StringPtr("statestore.priority-topic-update-durations"),

			Kind: metrics.TMetricKindPtr(3),

			Label: thrift.StringPtr("Statestore Priority Topic Update Durations"),

			Units: metrics.TUnitPtr(9),
		},
		"statestore.topic-update-durations": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("The time (sec) spent sending non-priority topic update RPCs. Includes subscriber-side processing time and network transmission time."),

			Key: thrift.StringPtr("statestore.topic-update-durations"),

			Kind: metrics.TMetricKindPtr(3),

			Label: thrift.StringPtr("Statestore Topic Update Durations"),

			Units: metrics.TUnitPtr(9),
		},
		"statestore.total-key-size-bytes": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("The sum of the size of all keys for all topics tracked by the StateStore."),

			Key: thrift.StringPtr("statestore.total-key-size-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Topic Key Size"),

			Units: metrics.TUnitPtr(7),
		},
		"statestore.total-topic-size-bytes": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("The sum of the size of all keys and all values for all topics tracked by the StateStore."),

			Key: thrift.StringPtr("statestore.total-topic-size-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Topic Size"),

			Units: metrics.TUnitPtr(7),
		},
		"statestore.total-value-size-bytes": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("The sum of the size of all values for all topics tracked by the StateStore."),

			Key: thrift.StringPtr("statestore.total-value-size-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Topic Value Size"),

			Units: metrics.TUnitPtr(7),
		},
		"statestore.version": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("The full version string of the Statestore Server."),

			Key: thrift.StringPtr("statestore.version"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Statestore Version"),

			Units: metrics.TUnitPtr(7),
		},
		"subscriber-heartbeat.client-cache.clients-in-use": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("The number of clients in use by the Statestore heartbeat client cache."),

			Key: thrift.StringPtr("subscriber-heartbeat.client-cache.clients-in-use"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Subscriber Heartbeat Client Cache Clients In Use"),

			Units: metrics.TUnitPtr(7),
		},
		"subscriber-heartbeat.client-cache.total-clients": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("The total number of clients in the Statestore heartbeat client cache."),

			Key: thrift.StringPtr("subscriber-heartbeat.client-cache.total-clients"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Subscriber Heartbeat Client Cache Total Clients"),

			Units: metrics.TUnitPtr(7),
		},
		"subscriber-update-state.client-cache.clients-in-use": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("The number of clients in use by the Statestore update state client cache."),

			Key: thrift.StringPtr("subscriber-update-state.client-cache.clients-in-use"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Subscriber Update State Client Cache Clients In Use"),

			Units: metrics.TUnitPtr(7),
		},
		"subscriber-update-state.client-cache.total-clients": &TMetricDef{
			Contexts: []string{
				"STATESTORE"},

			Description: thrift.StringPtr("The total number of clients in the Statestore update state client cache."),

			Key: thrift.StringPtr("subscriber-update-state.client-cache.total-clients"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Subscriber Update State Client Cache Total Clients"),

			Units: metrics.TUnitPtr(7),
		},
		"tcmalloc.bytes-in-use": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Number of bytes used by the application. This will not typically match the memory use reported by the OS, because it does not include TCMalloc overhead or memory fragmentation."),

			Key: thrift.StringPtr("tcmalloc.bytes-in-use"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("TCMalloc Bytes in Use"),

			Units: metrics.TUnitPtr(3),
		},
		"tcmalloc.pageheap-free-bytes": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Number of bytes in free, mapped pages in page heap. These bytes can be used to fulfill allocation requests. They always count towards virtual memory usage, and unless the underlying memory is swapped out by the OS, they also count towards physical memory usage."),

			Key: thrift.StringPtr("tcmalloc.pageheap-free-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("TCMalloc Pageheap Free"),

			Units: metrics.TUnitPtr(3),
		},
		"tcmalloc.pageheap-unmapped-bytes": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Number of bytes in free, unmapped pages in page heap. These are bytes that have been released back to the OS, possibly by one of the MallocExtension \"Release\" calls. They can be used to fulfill allocation requests, but typically incur a page fault. They always count towards virtual memory usage, and depending on the OS, typically do not count towards physical memory usage."),

			Key: thrift.StringPtr("tcmalloc.pageheap-unmapped-bytes"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("TCMalloc Pageheap Unmapped"),

			Units: metrics.TUnitPtr(3),
		},
		"tcmalloc.physical-bytes-reserved": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Derived metric computing the amount of physical memory (in bytes) used by the process, including that actually in use and free bytes reserved by tcmalloc. Does not include the tcmalloc metadata."),

			Key: thrift.StringPtr("tcmalloc.physical-bytes-reserved"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("TCMalloc Physical Bytes Reserved"),

			Units: metrics.TUnitPtr(3),
		},
		"tcmalloc.total-bytes-reserved": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Bytes of system memory reserved by TCMalloc."),

			Key: thrift.StringPtr("tcmalloc.total-bytes-reserved"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("TCMalloc Total Bytes Reserved"),

			Units: metrics.TUnitPtr(3),
		},
		"thread-manager.running-threads": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("The number of running threads in this process."),

			Key: thrift.StringPtr("thread-manager.running-threads"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Running Threads"),

			Units: metrics.TUnitPtr(7),
		},
		"thread-manager.total-threads-created": &TMetricDef{
			Contexts: []string{
				"STATESTORE", "CATALOGSERVER", "IMPALAD"},

			Description: thrift.StringPtr("Threads created over the lifetime of the process."),

			Key: thrift.StringPtr("thread-manager.total-threads-created"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Threads Created"),

			Units: metrics.TUnitPtr(7),
		},
		"tmp-file-mgr.active-scratch-dirs": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The number of active scratch directories for spilling to disk."),

			Key: thrift.StringPtr("tmp-file-mgr.active-scratch-dirs"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Active scratch directories"),

			Units: metrics.TUnitPtr(7),
		},
		"tmp-file-mgr.active-scratch-dirs.list": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The set of all active scratch directories for spilling to disk."),

			Key: thrift.StringPtr("tmp-file-mgr.active-scratch-dirs.list"),

			Kind: metrics.TMetricKindPtr(4),

			Label: thrift.StringPtr("Active scratch directories list"),

			Units: metrics.TUnitPtr(7),
		},
		"tmp-file-mgr.local-buff-bytes-used.dir-$0": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The current total spilled bytes for the local buffer directory."),

			Key: thrift.StringPtr("tmp-file-mgr.local-buff-bytes-used.dir-$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Per-directory local buffer space bytes used"),

			Units: metrics.TUnitPtr(3),
		},
		"tmp-file-mgr.scratch-space-bytes-used": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The current total spilled bytes across all scratch directories."),

			Key: thrift.StringPtr("tmp-file-mgr.scratch-space-bytes-used"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Spilled bytes for scratch directories"),

			Units: metrics.TUnitPtr(3),
		},
		"tmp-file-mgr.scratch-space-bytes-used-high-water-mark": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The high water mark for spilled bytes across all scratch directories."),

			Key: thrift.StringPtr("tmp-file-mgr.scratch-space-bytes-used-high-water-mark"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Spilled bytes HWM for scratch directories"),

			Units: metrics.TUnitPtr(3),
		},
		"tmp-file-mgr.scratch-space-bytes-used.dir-$0": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The current total spilled bytes for a single scratch directory."),

			Key: thrift.StringPtr("tmp-file-mgr.scratch-space-bytes-used.dir-$0"),

			Kind: metrics.TMetricKindPtr(0),

			Label: thrift.StringPtr("Per-directory scratch space bytes used"),

			Units: metrics.TUnitPtr(3),
		},
		"tmp-file-mgr.tmp-file-buff-pool-dequeue-durations": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("The durations of dequeuing from the TmpFileBufferPool."),

			Key: thrift.StringPtr("tmp-file-mgr.tmp-file-buff-pool-dequeue-durations"),

			Kind: metrics.TMetricKindPtr(5),

			Label: thrift.StringPtr("Dequeue durations for the TmpFileBufferPool"),

			Units: metrics.TUnitPtr(5),
		},
		"total-senders-blocked-on-recvr-creation": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of senders that have been blocked waiting for receiving fragment to initialize."),

			Key: thrift.StringPtr("total-senders-blocked-on-recvr-creation"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Total senders waiting for receiving fragment to initialize"),

			Units: metrics.TUnitPtr(7),
		},
		"total-senders-timedout-waiting-for-recvr-creation": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Total number of senders that timed-out waiting for receiving fragment to initialize."),

			Key: thrift.StringPtr("total-senders-timedout-waiting-for-recvr-creation"),

			Kind: metrics.TMetricKindPtr(1),

			Label: thrift.StringPtr("Total senders timed-out waiting for receiving fragment to initialize"),

			Units: metrics.TUnitPtr(7),
		},
		"tzdata-path": &TMetricDef{
			Contexts: []string{
				"IMPALAD"},

			Description: thrift.StringPtr("Path to the time-zone database"),

			Key: thrift.StringPtr("tzdata-path"),

			Kind: metrics.TMetricKindPtr(2),

			Label: thrift.StringPtr("Path to the time-zone database"),

			Units: metrics.TUnitPtr(7),
		},
	}

}
